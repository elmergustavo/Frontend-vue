{"ast":null,"code":"export default {\n  data() {\n    return {\n      name: '',\n      nameState: null,\n      submittedNames: []\n    };\n  },\n\n  methods: {\n    checkFormValidity() {\n      const valid = this.$refs.form.checkValidity();\n      this.nameState = valid;\n      return valid;\n    },\n\n    resetModal() {\n      this.name = '';\n      this.nameState = null;\n    },\n\n    handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault(); // Trigger submit handler\n\n      this.handleSubmit();\n    },\n\n    handleSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return;\n      } // Push the name to submitted names\n\n\n      this.submittedNames.push(this.name); // Hide the modal manually\n\n      this.$nextTick(() => {\n        this.$bvModal.hide('modal-prevent-closing');\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwCE,eAAe;AACbA,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,EADD;AAELC,eAAS,EAAE,IAFN;AAGLC,oBAAc,EAAE;AAHX,KAAP;AAKD,GAPY;;AAQbC,SAAO,EAAE;AACPC,qBAAiB,GAAG;AAClB,YAAMC,KAAI,GAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,EAAd;AACA,WAAKP,SAAL,GAAiBI,KAAjB;AACA,aAAOA,KAAP;AACD,KALM;;AAMPI,cAAU,GAAG;AACX,WAAKT,IAAL,GAAY,EAAZ;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACD,KATM;;AAUPS,YAAQ,CAACC,YAAD,EAAe;AACrB;AACAA,kBAAY,CAACC,cAAb,GAFqB,CAGrB;;AACA,WAAKC,YAAL;AACD,KAfM;;AAgBPA,gBAAY,GAAG;AACb;AACA,UAAI,CAAC,KAAKT,iBAAL,EAAL,EAA+B;AAC7B;AACF,OAJa,CAKb;;;AACA,WAAKF,cAAL,CAAoBY,IAApB,CAAyB,KAAKd,IAA9B,EANa,CAOb;;AACA,WAAKe,SAAL,CAAe,MAAM;AACnB,aAAKC,QAAL,CAAcC,IAAd,CAAmB,uBAAnB;AACD,OAFD;AAGF;;AA3BO;AARI,CAAf","names":["data","name","nameState","submittedNames","methods","checkFormValidity","valid","$refs","form","checkValidity","resetModal","handleOk","bvModalEvent","preventDefault","handleSubmit","push","$nextTick","$bvModal","hide"],"sourceRoot":"","sources":["/home/gustavo/Escritorio/fronted-tutores/src/components/TestModal.vue"],"sourcesContent":["<template>\n  <div>\n    <b-button v-b-modal.modal-prevent-closing>Open Modal</b-button>\n\n    <div class=\"mt-3\">\n      Submitted Names:\n      <div v-if=\"submittedNames.length === 0\">--</div>\n      <ul v-else class=\"mb-0 pl-3\">\n        <li v-for=\"name in submittedNames\">{{ name }}</li>\n      </ul>\n    </div>\n\n    <b-modal\n      id=\"modal-prevent-closing\"\n      ref=\"modal\"\n      title=\"Submit Your Name\"\n      @show=\"resetModal\"\n      @hidden=\"resetModal\"\n      @ok=\"handleOk\"\n    >\n      <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n        <b-form-group\n          label=\"Name\"\n          label-for=\"name-input\"\n          invalid-feedback=\"Name is required\"\n          :state=\"nameState\"\n        >\n          <b-form-input\n            id=\"name-input\"\n            v-model=\"name\"\n            :state=\"nameState\"\n            required\n          ></b-form-input>\n        </b-form-group>\n      </form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        name: '',\n        nameState: null,\n        submittedNames: []\n      }\n    },\n    methods: {\n      checkFormValidity() {\n        const valid = this.$refs.form.checkValidity()\n        this.nameState = valid\n        return valid\n      },\n      resetModal() {\n        this.name = ''\n        this.nameState = null\n      },\n      handleOk(bvModalEvent) {\n        // Prevent modal from closing\n        bvModalEvent.preventDefault()\n        // Trigger submit handler\n        this.handleSubmit()\n      },\n      handleSubmit() {\n        // Exit when the form isn't valid\n        if (!this.checkFormValidity()) {\n          return\n        }\n        // Push the name to submitted names\n        this.submittedNames.push(this.name)\n        // Hide the modal manually\n        this.$nextTick(() => {\n          this.$bvModal.hide('modal-prevent-closing')\n        })\n      }\n    }\n  }\n</script>"]},"metadata":{},"sourceType":"module"}