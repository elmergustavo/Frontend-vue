{"ast":null,"code":"/**\r\n * Translates the list format produced by css-loader into something\r\n * easier to manipulate.\r\n */\nexport default function listToStyles(parentId, list) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}","map":{"version":3,"sources":["C:/Users/ljrp3/Videos/Proyecto final web/Frontend-vue/node_modules/vue-style-loader/lib/listToStyles.js"],"names":["listToStyles","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","push","parts"],"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAT,CAAuBC,QAAvB,EAAiCC,IAAjC,EAAuC;AACpD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAf;AACA,QAAIG,EAAE,GAAGD,IAAI,CAAC,CAAD,CAAb;AACA,QAAIE,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAd;AACA,QAAIG,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAhB;AACA,QAAII,SAAS,GAAGJ,IAAI,CAAC,CAAD,CAApB;AACA,QAAIK,IAAI,GAAG;AACTJ,MAAAA,EAAE,EAAEP,QAAQ,GAAG,GAAX,GAAiBI,CADZ;AAETI,MAAAA,GAAG,EAAEA,GAFI;AAGTC,MAAAA,KAAK,EAAEA,KAHE;AAITC,MAAAA,SAAS,EAAEA;AAJF,KAAX;;AAMA,QAAI,CAACP,SAAS,CAACI,EAAD,CAAd,EAAoB;AAClBL,MAAAA,MAAM,CAACU,IAAP,CAAYT,SAAS,CAACI,EAAD,CAAT,GAAgB;AAAEA,QAAAA,EAAE,EAAEA,EAAN;AAAUM,QAAAA,KAAK,EAAE,CAACF,IAAD;AAAjB,OAA5B;AACD,KAFD,MAEO;AACLR,MAAAA,SAAS,CAACI,EAAD,CAAT,CAAcM,KAAd,CAAoBD,IAApB,CAAyBD,IAAzB;AACD;AACF;;AACD,SAAOT,MAAP;AACD","sourcesContent":["/**\r\n * Translates the list format produced by css-loader into something\r\n * easier to manipulate.\r\n */\r\nexport default function listToStyles (parentId, list) {\r\n  var styles = []\r\n  var newStyles = {}\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i]\r\n    var id = item[0]\r\n    var css = item[1]\r\n    var media = item[2]\r\n    var sourceMap = item[3]\r\n    var part = {\r\n      id: parentId + ':' + i,\r\n      css: css,\r\n      media: media,\r\n      sourceMap: sourceMap\r\n    }\r\n    if (!newStyles[id]) {\r\n      styles.push(newStyles[id] = { id: id, parts: [part] })\r\n    } else {\r\n      newStyles[id].parts.push(part)\r\n    }\r\n  }\r\n  return styles\r\n}\r\n"]},"metadata":{},"sourceType":"module"}