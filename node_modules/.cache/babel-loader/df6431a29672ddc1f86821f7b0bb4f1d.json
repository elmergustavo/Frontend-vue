{"ast":null,"code":"import { createStore } from \"vuex\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default createStore({\n  state: {\n    state: {\n      token: null\n    }\n  },\n  getters: {},\n  mutations: {\n    setToken(state, payload) {\n      state.token = payload;\n    }\n\n  },\n  actions: {\n    async registerUser(commit, usuario) {\n      console.log(usuario);\n\n      try {\n        //const res = await fetch\n        const data = await axios.post(\"https://te-ayudo-api.herokuapp.com/user/register\", usuario);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async iniciarSesion(commit, usuario) {\n      try {\n        //const res = await fetch\n        const data = await axios.post(\"https://te-ayudo-api.herokuapp.com/user/login\", usuario);\n        console.log(data.data.token);\n        localStorage.setItem(\"token\", data.data.token);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async registrarTutor(commit, tutor) {\n      if (tutor.name === \"\") {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        });\n        return;\n      }\n\n      let str = tutor.CoursesMaster;\n      let arr = str.split(', ');\n      tutor.CoursesMaster = arr; //dividir la cadena de texto por una coma\n\n      console.log(arr);\n\n      try {\n        //const res = await fetch\n        const data = await axios.post(\"https://te-ayudo-api.herokuapp.com/tutor\", tutor);\n        Swal.fire('Tutor completado', 'Gracias por participar en TeAyudo', 'success');\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["C:/Users/milvi/OneDrive/Documents/GitHub/Frontend-vue/src/store/index.js"],"names":["createStore","axios","Swal","state","token","getters","mutations","setToken","payload","actions","registerUser","commit","usuario","console","log","data","post","error","iniciarSesion","localStorage","setItem","registrarTutor","tutor","name","fire","icon","title","text","str","CoursesMaster","arr","split","modules"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAeF,WAAW,CAAC;AACzBG,EAAAA,KAAK,EAAE;AACLA,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF;AADF,GADkB;AAMzBC,EAAAA,OAAO,EAAE,EANgB;AAOzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,CAACJ,KAAD,EAAQK,OAAR,EAAiB;AACvBL,MAAAA,KAAK,CAACC,KAAN,GAAcI,OAAd;AACD;;AAHQ,GAPc;AAYzBC,EAAAA,OAAO,EAAE;AACP,UAAMC,YAAN,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAI;AACF;AACA,cAAMG,IAAI,GAAG,MAAMd,KAAK,CAACe,IAAN,CACjB,kDADiB,EAEjBJ,OAFiB,CAAnB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,OARD,CAQE,OAAOE,KAAP,EAAc;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,KAdM;;AAgBP,UAAMC,aAAN,CAAoBP,MAApB,EAA4BC,OAA5B,EAAqC;AACnC,UAAI;AACF;AACA,cAAMG,IAAI,GAAG,MAAMd,KAAK,CAACe,IAAN,CACjB,+CADiB,EAEjBJ,OAFiB,CAAnB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACA,IAAL,CAAUX,KAAtB;AAEAe,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACA,IAAL,CAAUX,KAAxC;AACD,OAVD,CAUE,OAAOa,KAAP,EAAc;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,KA9BM;;AAgCP,UAAMI,cAAN,CAAqBV,MAArB,EAA6BW,KAA7B,EAAoC;AAClC,UAAIA,KAAK,CAACC,IAAN,KAAe,EAAnB,EAAsB;AACpBrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACRC,UAAAA,IAAI,EAAE,OADE;AAERC,UAAAA,KAAK,EAAE,SAFC;AAGRC,UAAAA,IAAI,EAAE;AAHE,SAAV;AAKA;AACD;;AAID,UAAIC,GAAG,GAAGN,KAAK,CAACO,aAAhB;AACA,UAAIC,GAAG,GAAGF,GAAG,CAACG,KAAJ,CAAU,IAAV,CAAV;AACAT,MAAAA,KAAK,CAACO,aAAN,GAAsBC,GAAtB,CAdkC,CAelC;;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;;AACA,UAAI;AACF;AACA,cAAMf,IAAI,GAAG,MAAMd,KAAK,CAACe,IAAN,CACjB,0CADiB,EAEjBM,KAFiB,CAAnB;AAKApB,QAAAA,IAAI,CAACsB,IAAL,CACE,kBADF,EAEE,mCAFF,EAGE,SAHF;AAKAX,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,OAbD,CAaE,OAAOE,KAAP,EAAc;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF;;AAjEM,GAZgB;AA+EzBe,EAAAA,OAAO,EAAE;AA/EgB,CAAD,CAA1B","sourcesContent":["import { createStore } from \"vuex\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default createStore({\r\n  state: {\r\n    state: {\r\n      token: null,\r\n    },\r\n  },\r\n  getters: {},\r\n  mutations: {\r\n    setToken(state, payload) {\r\n      state.token = payload;\r\n    },\r\n  },\r\n  actions: {\r\n    async registerUser(commit, usuario) {\r\n      console.log(usuario);\r\n      try {\r\n        //const res = await fetch\r\n        const data = await axios.post(\r\n          \"https://te-ayudo-api.herokuapp.com/user/register\",\r\n          usuario\r\n        );\r\n\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    async iniciarSesion(commit, usuario) {\r\n      try {\r\n        //const res = await fetch\r\n        const data = await axios.post(\r\n          \"https://te-ayudo-api.herokuapp.com/user/login\",\r\n          usuario\r\n        );\r\n\r\n        console.log(data.data.token);\r\n\r\n        localStorage.setItem(\"token\", data.data.token);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    async registrarTutor(commit, tutor) {\r\n      if (tutor.name === \"\"){\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Something went wrong!',\r\n        })\r\n        return\r\n      }\r\n     \r\n      \r\n\r\n      let str = tutor.CoursesMaster;\r\n      let arr = str.split(', '); \r\n      tutor.CoursesMaster = arr\r\n      //dividir la cadena de texto por una coma\r\n      console.log(arr);\r\n      try {\r\n        //const res = await fetch\r\n        const data = await axios.post(\r\n          \"https://te-ayudo-api.herokuapp.com/tutor\",\r\n          tutor\r\n        );\r\n\r\n        Swal.fire(\r\n          'Tutor completado',\r\n          'Gracias por participar en TeAyudo',\r\n          'success'\r\n        )\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n  modules: {},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}